{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/egeuz/Desktop/code-decolonized-website/client/src/components/Editor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport marked from 'marked';\nimport DOMPurify from 'dompurify';\nimport axios from 'axios';\n\nfunction Editor({\n  closeEditor,\n  fetchPosts\n}) {\n  _s();\n\n  const [markdown, setMarkdown] = useState(\"\");\n  const [selection, setSelection] = useState({\n    start: \"\",\n    end: \"\",\n    cursorPos: \"\",\n    text: \"\"\n  });\n\n  const handleTypeInput = event => {\n    setMarkdown(event.target.value);\n    handleTextSelection(event);\n  };\n\n  const handleTextSelection = event => {\n    const start = event.target.selectionStart;\n    const end = event.target.selectionEnd;\n    const text = event.target.value.slice(start, end);\n    const cursorPos = start === end ? start : end;\n    setSelection({\n      start,\n      end,\n      cursorPos,\n      text\n    });\n  };\n\n  const handleSubmission = async () => {\n    const post = {\n      markdown: markdown,\n      dateCreated: \"test\",\n      dateUpdated: \"test\"\n    };\n    const res = await axios.post('/api/submit-new-post', post);\n    const message = await res.data;\n    console.log(message);\n    fetchPosts();\n    closeEditor();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"toolbar\",\n        children: \"hey toolbar here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: markdown,\n        onChange: handleTypeInput,\n        onClick: handleTextSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"preview-area\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"preview\",\n        dangerouslySetInnerHTML: {\n          __html: DOMPurify.sanitize(marked(markdown))\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"bottom-row\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submit\",\n        onClick: handleSubmission,\n        children: \"Submit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Editor, \"BQyGjEeOqzBD1o20U+L+v1TO8Ew=\");\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["/Users/egeuz/Desktop/code-decolonized-website/client/src/components/Editor.js"],"names":["React","useState","marked","DOMPurify","axios","Editor","closeEditor","fetchPosts","markdown","setMarkdown","selection","setSelection","start","end","cursorPos","text","handleTypeInput","event","target","value","handleTextSelection","selectionStart","selectionEnd","slice","handleSubmission","post","dateCreated","dateUpdated","res","message","data","console","log","__html","sanitize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport marked from 'marked'\nimport DOMPurify from 'dompurify'\nimport axios from 'axios'\n\nfunction Editor({closeEditor, fetchPosts}) {\n  const [markdown, setMarkdown] = useState(\"\")\n  const [selection, setSelection] = useState({\n    start: \"\",\n    end: \"\",\n    cursorPos: \"\",\n    text: \"\"\n  })\n\n  const handleTypeInput = event => {\n    setMarkdown(event.target.value)\n    handleTextSelection(event)\n  }\n\n  const handleTextSelection = event => {\n    const start = event.target.selectionStart\n    const end = event.target.selectionEnd\n    const text = event.target.value.slice(start, end)\n    const cursorPos = (start === end) ? start : end\n    setSelection({ start, end, cursorPos, text })\n  }\n\n  const handleSubmission = async () => {\n    const post = {\n      markdown: markdown,\n      dateCreated: \"test\",\n      dateUpdated: \"test\"\n    }\n    const res = await axios.post('/api/submit-new-post', post)\n    const message = await res.data\n    console.log(message)\n    fetchPosts()\n    closeEditor()\n  }\n\n  return (\n    <div id=\"editor\">\n      <div id=\"input-area\">\n        <div id=\"toolbar\">hey toolbar here</div>\n        <textarea\n          value={markdown}\n          onChange={handleTypeInput}\n          onClick={handleTextSelection}\n        />\n      </div>\n      <div id=\"preview-area\">\n        <div\n          id=\"preview\"\n          dangerouslySetInnerHTML={{\n            __html: DOMPurify.sanitize(marked(markdown))\n          }}\n        />\n      </div>\n      <div id=\"bottom-row\">\n        <button\n          id=\"submit\"\n          onClick={handleSubmission}\n        >\n          Submit Post\n      </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Editor\n"]},"metadata":{},"sourceType":"module"}